#0_deploy/gw/istio-ingress-gateway
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: istio-ingress-gateway
  namespace: smartcity
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
#0_deploy/opolicy/scheduling-policy
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPPolicy
metadata:
  name: scheduling-policy
  namespace: openmcp
spec:
  template:
    spec:
      targetController:
        kind: OpenMCPSchduler
      policies:
        - type: algorithm
          value:
            - OpenMCP
  rangeOfApplication: All
  policyStatus: Enabled
---
#5_deploy/odeploy/ingest
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPDeployment
metadata:
  name: ingest
  namespace: smartcity
spec:
  replicas: 1
  clusters:
    - cluster05
    - cluster10
    - cluster12
    - cluster17
  labels:
    app: ingest
  template:
    spec:
      template:
        spec:
          hostAliases:
            - ip: 27.101.215.194
              hostnames:
                - "apis.data.go.kr"
          imagePullSecrets:
            - name: regcred
          containers:
            - env:
                - name: AGENT_CONF
                  value: ./conf
                - name: AGENT_FILE
                  value: ./conf/agent1st.conf
                - name: AGENT_NAME
                  value: agent1st
                - name: DATACORE_URL
                  value: http://ingest-interface:8081/entityOperations/upsert
                - name: SCHEMA_URL
                  value: http://data-manager:8080/datamodels
                - name: TZ
                  value: Asia/Seoul
              image: ketidevit2/smartcity-daemon:0.0.1
              imagePullPolicy: Always
              name: smartcityingest
              ports:
                - containerPort: 8888
              resources: {}
          hostname: smartcityingest
          restartPolicy: Always
---
#5_deploy/osvc/ingest
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPService
metadata:
  name: ingest
  namespace: smartcity
  labels:
    app: ingest
spec:
  template:
    spec:
      ports:
        - name: "8888"
          port: 8888
          targetPort: 8888
      selector:
        app: ingest
---
#5_deploy/odeploy/user-tool
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPDeployment
metadata:
  name: user-tool
  namespace: smartcity
spec:
  replicas: 1
  clusters:
    - cluster05
    - cluster10
    - cluster12
    - cluster17
  labels:
    app: user-tool
  template:
    spec:
      template:
        spec:
          imagePullSecrets:
            - name: regcred
          containers:
            - env:
                - name: DATACOREUSERTOOL_URL
                  value: http://user-tool:8083/notification
                - name: DATAMANAGER_URL
                  value: http://data-manager:8080
                - name: DATASERVICEBROKER_URL
                  value: http://data-service-broker:8082
                - name: SECURITY_ENABLED
                  value: "false"
              image: ketidevit2/datacore-usertool:0.0.1
              imagePullPolicy: Always
              name: user-tool
              ports:
                - containerPort: 38081
              resources: {}
          restartPolicy: Always
---
#5_deploy/oingress/user-tool-ingess
apiVersion:  openmcp.k8s.io/v1alpha1
kind: OpenMCPIngress
metadata:
  name: user-tool-ingress
  namespace: smartcity
spec:
  template:
    spec:
      rules:
        - host: usertool.smartcity.openmcp.com
          http:
            paths:
              - path: /
                backend:
                  serviceName: user-tool
                  servicePort: 8083
---
#5_deploy/oingressdnsrecord/user-tool-ingress
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPIngressDNSRecord
metadata:
  name: user-tool-ingress
  namespace: smartcity
spec:
  recordTTL: 300
---
#5_deploy/ovs/user-tool
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPVirtualService
metadata:
  name: user-tool
  namespace: smartcity
spec:
  hosts:
    - "usertool.smartcity.openmcp.com"
  gateways:
    - istio-ingress-gateway
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: user-tool
            port:
              number: 8083
---
#5_deploy/osvc/user-tool
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPService
metadata:
  name: user-tool
  namespace: smartcity
  labels:
    app: user-tool
spec:
  template:
    spec:
      type: LoadBalancer
      ports:
        - name: "8083"
          port: 8083
          targetPort: 38081
          nodePort: 30036
      selector:
        app: user-tool
---
#6_deploy/odeploy/web
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPDeployment
metadata:
  name: web
  namespace: smartcity
spec:
  clusters:
    - cluster05
    - cluster10
    - cluster12
    - cluster17
  replicas: 1
  labels:
    app: web
  template:
    spec:
      template:
        spec:
          imagePullSecrets:
            - name: regcred
          containers:
            - env:
                - name: AUTH_EXTERNAL
                  value: http://203.253.128.181:30084
                - name: AUTH_INTERNAL
                  value: http://10.0.0.237:30000
                - name: AUTH_YN
                  value: "N"
                - name: DAEMON_URL
                  value: http://ingest:8888
                - name: DATACORE_URL
                  value: http://ingest-interface:8081/entityOperations/upsert
                - name: DATASOURCE_ID
                  value: postgres
                - name: DATASOURCE_PW
                  value: pine1234
                - name: DATASOURCE_URL
                  value: jdbc:postgresql://postgres:5432/postgres
                - name: REDIRECT_URL
                  value: http://203.253.128.181:9208
                - name: SCHEMA_URL
                  value: http://data-manager:8080/datamodels
                - name: TZ
                  value: Asia/Seoul
              image: ketidevit2/smartcity-web:0.0.1
              imagePullPolicy: Always
              name: smartcityweb
              ports:
                - containerPort: 8080
              resources: {}
          hostname: smartcityweb
          restartPolicy: Always
---
#6_deploy/oingress/web-ingress
apiVersion:  openmcp.k8s.io/v1alpha1
kind: OpenMCPIngress
metadata:
  name: web-ingress
  namespace: smartcity
spec:
  template:
    spec:
      rules:
        - host: web.smartcity.openmcp.com
          http:
            paths:
              - path: /
                backend:
                  serviceName: web
                  servicePort: 8080
---
#6_deploy/oingressdnsrecord/web-ingress
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPIngressDNSRecord
metadata:
  name: web-ingress
  namespace: smartcity
spec:
  recordTTL: 300
---
#6_deploy/ovs/web
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPVirtualService
metadata:
  name: web
  namespace: smartcity
spec:
  hosts:
    - "web.smartcity.openmcp.com"
  gateways:
    - istio-ingress-gateway
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            host: web
            port:
              number: 8080
---
#6_deploy/osvc/web
apiVersion: openmcp.k8s.io/v1alpha1
kind: OpenMCPService
metadata:
  name: web
  namespace: smartcity
  labels:
    app: web
spec:
  template:
    spec:
      type: LoadBalancer
      ports:
        - name: "8080"
          port: 8080
          targetPort: 8080
          nodePort: 30035
      selector:
        app: web